// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
@use '@material/textfield';
// Plus imports for other components in your app.

@import "./variables.scss";

@tailwind base;
@tailwind components;
@tailwind utilities;

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$primary: mat.define-palette(mat.$indigo-palette);
$accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$theme: mat.define-light-theme((color: (primary: $primary,
                accent: $accent,
                warn: $warn,
            )));

$dark-primary: mat.define-palette(mat.$purple-palette);
$dark-accent: mat.define-palette(mat.$green-palette);
$dark-warn: mat.define-palette(mat.$red-palette);

$dark-theme: mat.define-dark-theme((color: (primary: $dark-primary,
                accent: $dark-accent,
                warn: $dark-warn,
            )));

$colors: 50, 100, 200, 300, 400, 500, 600, 700, 800, 900;

.text-primary {
    color: mat.get-color-from-palette($primary, 500);
}

.bg-primary {
    background-color: mat.get-color-from-palette($primary, 500);
}

.text-accent {
    color: mat.get-color-from-palette($accent, 500);
}

.bg-accent {
    background-color: mat.get-color-from-palette($accent, 500);
}

.text-warn {
    color: mat.get-color-from-palette($warn, 500);
}

.bg-warn {
    background-color: mat.get-color-from-palette($warn, 500);
}

@each $color in $colors {
    .text-primary-#{$color} {
        color: mat.get-color-from-palette($primary, $color);
    }

    .text-accent-#{$color} {
        color: mat.get-color-from-palette($accent, $color);
    }

    .bg-primary-#{$color} {
        background-color: mat.get-color-from-palette($primary, $color);
    }

    .bg-accent-#{$color} {
        background-color: mat.get-color-from-palette($accent, $color);
    }

    .text-warn-#{$color} {
        color: mat.get-color-from-palette($warn, $color);
    }

    .bg-warn-#{$color} {
        background-color: mat.get-color-from-palette($warn, $color);
    }

    .bg-base {
        background-color: mat.get-theme-color($theme, background, card);
    }
}

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($theme);

.dark {
    // This mixin only generates the color styles now.
    @include mat.all-component-colors($dark-theme);

    @each $color in $colors {
        .text-primary-#{$color} {
            color: mat.get-color-from-palette($dark-primary, $color);
        }

        .text-accent-#{$color} {
            color: mat.get-color-from-palette($dark-accent, $color);
        }

        .bg-primary-#{$color} {
            background-color: mat.get-color-from-palette($dark-primary, $color);
        }

        .bg-accent-#{$color} {
            background-color: mat.get-color-from-palette($dark-accent, $color);
        }

        .text-warn-#{$color} {
            background-color: mat.get-color-from-palette($dark-warn, $color);
        }

        .bg-warn-#{$color} {
            background-color: mat.get-color-from-palette($dark-warn, $color);
        }
    }

    .text-primary {
        color: mat.get-color-from-palette($dark-primary, 500);
    }

    .bg-primary {
        background-color: mat.get-color-from-palette($dark-primary, 500);
    }

    .text-accent {
        color: mat.get-color-from-palette($dark-accent, 500);
    }

    .bg-accent {
        background-color: mat.get-color-from-palette($dark-accent, 500);
    }

    .text-warn {
        color: mat.get-color-from-palette($dark-warn, 500);
    }

    .bg-warn {
        background-color: mat.get-color-from-palette($dark-warn, 500);
    }

    .bg-base {
        background-color: mat.get-theme-color($dark-theme, background, card);
    }

    input, textarea {
        caret-color: #ff37e7 !important;
    }
}

.dense-1 {
    @include mat.all-component-densities(-1);
}

.dense-2 {
    @include mat.all-component-densities(-2);
}

.dense-3 {
    @include mat.all-component-densities(-3);
}

.dense-4 {
    @include mat.all-component-densities(-4);
}

.dense-5 {
    @include mat.all-component-densities(-5);
}

.mat-mdc-text-field-wrapper:not(.mdc-text-field--outlined) .mat-mdc-floating-label {
    display: inline !important;
}

.mdc-notched-outline__notch {
    border-right: none;
}

.mat-mdc-option {
    min-height: 30px !important;
    width: 100% !important;
    overflow-wrap: break-word !important;
    font-size: 0.9rem !important;
}

.mdc-list-item__primary-text {
    width: 100%;
}

// Tables ---------------------------------------------
.table-responsive {
    display: block;
    width: 100%;
    // overflow-x: auto;
    overflow: auto;
    max-height: 62vh;
    min-height: 400px;
}

mat-table {
    width: 1200px;
    max-width: 1200px;
    margin-bottom: 1rem;
    display: table;
    border-collapse: collapse;
    margin: 0px;
}

mat-row,
mat-header-row {
    display: table-row;
    font-size: 100px;
}

mat-cell,
mat-header-cell {
    word-wrap: initial;
    display: table-cell;
    padding: 0px 5px;
    line-break: unset;
    width: auto;
    white-space: nowrap;
    overflow: hidden;
    vertical-align: middle;
}

.mat-mdc-header-cell {
    position: relative;
    font-weight: 600;
    text-transform: uppercase;
    // background: #59abfd !important;

    &::after {
        content: '';
        position: absolute;
        top: 0;
        bottom: 0px;
        left: 0;
        right: 0;
        border-bottom: 3px solid currentColor;
    }
}

.mat-mdc-table.mat-sort.mat-elevation-z8 {
    box-shadow: none;
}


.mat-mdc-cell {
    padding-top: 0.5rem !important;
    padding-bottom: 0.5rem !important;
}

.mat-mdc-row .mat-mdc-cell {
    transition: color 300ms;
    cursor: pointer;
}

.mat-mdc-row:hover .mat-mdc-cell {
    // hover sulla riga della tabella tema chiaro
    color: #3f51b5;
}

.dark .mat-mdc-row:hover .mat-mdc-cell {
    // hover sulla riga della tabella tema scuro
    color: #debde4;
}

.mat-mdc-row:hover:hover .mat-mdc-cell.mat-column-link {
    //per evitare che il link si illumini on hover
    text-shadow: none;
}


// Dialog -----------------------------------------

.mdc-dialog__title {
    font-size: 1.5rem !important;
}

.mdc-dialog__container:has(#big-dialog) {
    width: 1200px !important;
}

// SnackBar ------------------------------------

// .mat-mdc-snack-bar-container {
//     & {
//         --mdc-snackbar-container-color: #2196f3;
//         --mat-mdc-snack-bar-button-color: #fff;
//         --mdc-snackbar-supporting-text-color: #fff;
//     }
// }


// Scrollbar ----------------------------------------------

::-webkit-scrollbar {
    width: 20px;
}

::-webkit-scrollbar-thumb {
    background-color: #d6dee1;
}

::-webkit-scrollbar-thumb {
    background-color: #d6dee1;
    border-radius: 20px;
}

::-webkit-scrollbar-thumb {
    background-color: #d6dee1;
    border-radius: 20px;
    border: 6px solid transparent;
    background-clip: content-box;
}

::-webkit-scrollbar-thumb:hover {
    background-color: #a8bbbf;
}

/* You can add global styles to this file, and also import other style files */

html,
body {
    min-height: 100%;
}

body {
    margin: 0;
    font-family: Roboto, "Helvetica Neue", sans-serif;
    overflow-x: hidden;
    overflow-wrap: break-word;
}

.al-fade-in {
    animation: fade-in-animation 600ms linear;
}

@keyframes fade-in-animation {
    from {
        opacity: 0;
    }

    to {
        opacity: 1;
    }
}

// Input number -----------------------------------------
/* Chrome, Safari, Edge, Opera */
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
}

/* Firefox */
input[type=number] {
    -moz-appearance: textfield;
}


/* Kpi-dialog checkboxes */
.al-grid-checkbox {
    width: 100%;

    .mat-internal-form-field {
        width: 100%;

        .mdc-label {
            width: 100%;
        }
    }
}